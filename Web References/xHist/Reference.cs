//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace XigniteTest.xHist {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="XigniteGlobalHistoricalSoap", Namespace="http://www.xignite.com/services/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Common))]
    public partial class XigniteGlobalHistorical : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private Header headerValueField;
        
        private System.Threading.SendOrPostCallback ListExchangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSymbolsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSymbolChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSymbolsWithAdjustedFactorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashDividendHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCashDividendsByExchangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSplitHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSplitsByExchangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalHistoricalQuotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalHistoricalQuotesTrailingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalHistoricalQuotesRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalHistoricalWeeklyQuotesRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalHistoricalMonthlyQuotesRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalHistoricalQuarterlyQuotesRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalHistoricalTradesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalHistoricalTradesRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdjustmentFactorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalHistoricalVWAPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChartBarsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public XigniteGlobalHistorical() {
            this.Url = global::XigniteTest.Properties.Settings.Default.XigniteTest_xHist_XigniteGlobalHistorical;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Header HeaderValue {
            get {
                return this.headerValueField;
            }
            set {
                this.headerValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListExchangesCompletedEventHandler ListExchangesCompleted;
        
        /// <remarks/>
        public event ListSymbolsCompletedEventHandler ListSymbolsCompleted;
        
        /// <remarks/>
        public event ListSymbolChangesCompletedEventHandler ListSymbolChangesCompleted;
        
        /// <remarks/>
        public event ListSymbolsWithAdjustedFactorsCompletedEventHandler ListSymbolsWithAdjustedFactorsCompleted;
        
        /// <remarks/>
        public event GetCashDividendHistoryCompletedEventHandler GetCashDividendHistoryCompleted;
        
        /// <remarks/>
        public event GetCashDividendsByExchangeCompletedEventHandler GetCashDividendsByExchangeCompleted;
        
        /// <remarks/>
        public event GetSplitHistoryCompletedEventHandler GetSplitHistoryCompleted;
        
        /// <remarks/>
        public event GetSplitsByExchangeCompletedEventHandler GetSplitsByExchangeCompleted;
        
        /// <remarks/>
        public event GetGlobalHistoricalQuotesCompletedEventHandler GetGlobalHistoricalQuotesCompleted;
        
        /// <remarks/>
        public event GetGlobalHistoricalQuotesTrailingCompletedEventHandler GetGlobalHistoricalQuotesTrailingCompleted;
        
        /// <remarks/>
        public event GetGlobalHistoricalQuotesRangeCompletedEventHandler GetGlobalHistoricalQuotesRangeCompleted;
        
        /// <remarks/>
        public event GetGlobalHistoricalWeeklyQuotesRangeCompletedEventHandler GetGlobalHistoricalWeeklyQuotesRangeCompleted;
        
        /// <remarks/>
        public event GetGlobalHistoricalMonthlyQuotesRangeCompletedEventHandler GetGlobalHistoricalMonthlyQuotesRangeCompleted;
        
        /// <remarks/>
        public event GetGlobalHistoricalQuarterlyQuotesRangeCompletedEventHandler GetGlobalHistoricalQuarterlyQuotesRangeCompleted;
        
        /// <remarks/>
        public event GetGlobalHistoricalTradesCompletedEventHandler GetGlobalHistoricalTradesCompleted;
        
        /// <remarks/>
        public event GetGlobalHistoricalTradesRangeCompletedEventHandler GetGlobalHistoricalTradesRangeCompleted;
        
        /// <remarks/>
        public event GetAdjustmentFactorsCompletedEventHandler GetAdjustmentFactorsCompleted;
        
        /// <remarks/>
        public event GetGlobalHistoricalVWAPCompletedEventHandler GetGlobalHistoricalVWAPCompleted;
        
        /// <remarks/>
        public event GetChartBarsCompletedEventHandler GetChartBarsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/ListExchanges", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExchangeList ListExchanges() {
            object[] results = this.Invoke("ListExchanges", new object[0]);
            return ((ExchangeList)(results[0]));
        }
        
        /// <remarks/>
        public void ListExchangesAsync() {
            this.ListExchangesAsync(null);
        }
        
        /// <remarks/>
        public void ListExchangesAsync(object userState) {
            if ((this.ListExchangesOperationCompleted == null)) {
                this.ListExchangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListExchangesOperationCompleted);
            }
            this.InvokeAsync("ListExchanges", new object[0], this.ListExchangesOperationCompleted, userState);
        }
        
        private void OnListExchangesOperationCompleted(object arg) {
            if ((this.ListExchangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListExchangesCompleted(this, new ListExchangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/ListSymbols", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SymbolList ListSymbols(string Exchange, string StartSymbol, string EndSymbol) {
            object[] results = this.Invoke("ListSymbols", new object[] {
                        Exchange,
                        StartSymbol,
                        EndSymbol});
            return ((SymbolList)(results[0]));
        }
        
        /// <remarks/>
        public void ListSymbolsAsync(string Exchange, string StartSymbol, string EndSymbol) {
            this.ListSymbolsAsync(Exchange, StartSymbol, EndSymbol, null);
        }
        
        /// <remarks/>
        public void ListSymbolsAsync(string Exchange, string StartSymbol, string EndSymbol, object userState) {
            if ((this.ListSymbolsOperationCompleted == null)) {
                this.ListSymbolsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSymbolsOperationCompleted);
            }
            this.InvokeAsync("ListSymbols", new object[] {
                        Exchange,
                        StartSymbol,
                        EndSymbol}, this.ListSymbolsOperationCompleted, userState);
        }
        
        private void OnListSymbolsOperationCompleted(object arg) {
            if ((this.ListSymbolsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSymbolsCompleted(this, new ListSymbolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/ListSymbolChanges", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SymbolChangeList ListSymbolChanges(string Exchange, string ChangesSince) {
            object[] results = this.Invoke("ListSymbolChanges", new object[] {
                        Exchange,
                        ChangesSince});
            return ((SymbolChangeList)(results[0]));
        }
        
        /// <remarks/>
        public void ListSymbolChangesAsync(string Exchange, string ChangesSince) {
            this.ListSymbolChangesAsync(Exchange, ChangesSince, null);
        }
        
        /// <remarks/>
        public void ListSymbolChangesAsync(string Exchange, string ChangesSince, object userState) {
            if ((this.ListSymbolChangesOperationCompleted == null)) {
                this.ListSymbolChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSymbolChangesOperationCompleted);
            }
            this.InvokeAsync("ListSymbolChanges", new object[] {
                        Exchange,
                        ChangesSince}, this.ListSymbolChangesOperationCompleted, userState);
        }
        
        private void OnListSymbolChangesOperationCompleted(object arg) {
            if ((this.ListSymbolChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSymbolChangesCompleted(this, new ListSymbolChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/ListSymbolsWithAdjustedFactors", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SymbolsWithAdjustedFactorsList ListSymbolsWithAdjustedFactors(string Exchange, string ChangesSince) {
            object[] results = this.Invoke("ListSymbolsWithAdjustedFactors", new object[] {
                        Exchange,
                        ChangesSince});
            return ((SymbolsWithAdjustedFactorsList)(results[0]));
        }
        
        /// <remarks/>
        public void ListSymbolsWithAdjustedFactorsAsync(string Exchange, string ChangesSince) {
            this.ListSymbolsWithAdjustedFactorsAsync(Exchange, ChangesSince, null);
        }
        
        /// <remarks/>
        public void ListSymbolsWithAdjustedFactorsAsync(string Exchange, string ChangesSince, object userState) {
            if ((this.ListSymbolsWithAdjustedFactorsOperationCompleted == null)) {
                this.ListSymbolsWithAdjustedFactorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSymbolsWithAdjustedFactorsOperationCompleted);
            }
            this.InvokeAsync("ListSymbolsWithAdjustedFactors", new object[] {
                        Exchange,
                        ChangesSince}, this.ListSymbolsWithAdjustedFactorsOperationCompleted, userState);
        }
        
        private void OnListSymbolsWithAdjustedFactorsOperationCompleted(object arg) {
            if ((this.ListSymbolsWithAdjustedFactorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSymbolsWithAdjustedFactorsCompleted(this, new ListSymbolsWithAdjustedFactorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetCashDividendHistory", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CashDividendHistory GetCashDividendHistory(string Identifier, string IdentifierType, string IdentifierAsOfDate, string StartDate, string EndDate, string CorporateActionsAdjusted) {
            object[] results = this.Invoke("GetCashDividendHistory", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        StartDate,
                        EndDate,
                        CorporateActionsAdjusted});
            return ((CashDividendHistory)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashDividendHistoryAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string StartDate, string EndDate, string CorporateActionsAdjusted) {
            this.GetCashDividendHistoryAsync(Identifier, IdentifierType, IdentifierAsOfDate, StartDate, EndDate, CorporateActionsAdjusted, null);
        }
        
        /// <remarks/>
        public void GetCashDividendHistoryAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string StartDate, string EndDate, string CorporateActionsAdjusted, object userState) {
            if ((this.GetCashDividendHistoryOperationCompleted == null)) {
                this.GetCashDividendHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashDividendHistoryOperationCompleted);
            }
            this.InvokeAsync("GetCashDividendHistory", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        StartDate,
                        EndDate,
                        CorporateActionsAdjusted}, this.GetCashDividendHistoryOperationCompleted, userState);
        }
        
        private void OnGetCashDividendHistoryOperationCompleted(object arg) {
            if ((this.GetCashDividendHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashDividendHistoryCompleted(this, new GetCashDividendHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetCashDividendsByExchange", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExchangeDividendsList GetCashDividendsByExchange(string Exchange, string ExDate, string CorporateActionsAdjusted) {
            object[] results = this.Invoke("GetCashDividendsByExchange", new object[] {
                        Exchange,
                        ExDate,
                        CorporateActionsAdjusted});
            return ((ExchangeDividendsList)(results[0]));
        }
        
        /// <remarks/>
        public void GetCashDividendsByExchangeAsync(string Exchange, string ExDate, string CorporateActionsAdjusted) {
            this.GetCashDividendsByExchangeAsync(Exchange, ExDate, CorporateActionsAdjusted, null);
        }
        
        /// <remarks/>
        public void GetCashDividendsByExchangeAsync(string Exchange, string ExDate, string CorporateActionsAdjusted, object userState) {
            if ((this.GetCashDividendsByExchangeOperationCompleted == null)) {
                this.GetCashDividendsByExchangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCashDividendsByExchangeOperationCompleted);
            }
            this.InvokeAsync("GetCashDividendsByExchange", new object[] {
                        Exchange,
                        ExDate,
                        CorporateActionsAdjusted}, this.GetCashDividendsByExchangeOperationCompleted, userState);
        }
        
        private void OnGetCashDividendsByExchangeOperationCompleted(object arg) {
            if ((this.GetCashDividendsByExchangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCashDividendsByExchangeCompleted(this, new GetCashDividendsByExchangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetSplitHistory", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SplitHistory GetSplitHistory(string Identifier, string IdentifierType, string IdentifierAsOfDate, string StartDate, string EndDate) {
            object[] results = this.Invoke("GetSplitHistory", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        StartDate,
                        EndDate});
            return ((SplitHistory)(results[0]));
        }
        
        /// <remarks/>
        public void GetSplitHistoryAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string StartDate, string EndDate) {
            this.GetSplitHistoryAsync(Identifier, IdentifierType, IdentifierAsOfDate, StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetSplitHistoryAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string StartDate, string EndDate, object userState) {
            if ((this.GetSplitHistoryOperationCompleted == null)) {
                this.GetSplitHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSplitHistoryOperationCompleted);
            }
            this.InvokeAsync("GetSplitHistory", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        StartDate,
                        EndDate}, this.GetSplitHistoryOperationCompleted, userState);
        }
        
        private void OnGetSplitHistoryOperationCompleted(object arg) {
            if ((this.GetSplitHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSplitHistoryCompleted(this, new GetSplitHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetSplitsByExchange", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExchangeSplitsList GetSplitsByExchange(string Exchange, string ExDate) {
            object[] results = this.Invoke("GetSplitsByExchange", new object[] {
                        Exchange,
                        ExDate});
            return ((ExchangeSplitsList)(results[0]));
        }
        
        /// <remarks/>
        public void GetSplitsByExchangeAsync(string Exchange, string ExDate) {
            this.GetSplitsByExchangeAsync(Exchange, ExDate, null);
        }
        
        /// <remarks/>
        public void GetSplitsByExchangeAsync(string Exchange, string ExDate, object userState) {
            if ((this.GetSplitsByExchangeOperationCompleted == null)) {
                this.GetSplitsByExchangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSplitsByExchangeOperationCompleted);
            }
            this.InvokeAsync("GetSplitsByExchange", new object[] {
                        Exchange,
                        ExDate}, this.GetSplitsByExchangeOperationCompleted, userState);
        }
        
        private void OnGetSplitsByExchangeOperationCompleted(object arg) {
            if ((this.GetSplitsByExchangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSplitsByExchangeCompleted(this, new GetSplitsByExchangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetGlobalHistoricalQuotes", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GlobalHistoricalQuote[] GetGlobalHistoricalQuotes(string Identifiers, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string AsOfDate) {
            object[] results = this.Invoke("GetGlobalHistoricalQuotes", new object[] {
                        Identifiers,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        AsOfDate});
            return ((GlobalHistoricalQuote[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalQuotesAsync(string Identifiers, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string AsOfDate) {
            this.GetGlobalHistoricalQuotesAsync(Identifiers, IdentifierType, IdentifierAsOfDate, AdjustmentMethod, AsOfDate, null);
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalQuotesAsync(string Identifiers, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string AsOfDate, object userState) {
            if ((this.GetGlobalHistoricalQuotesOperationCompleted == null)) {
                this.GetGlobalHistoricalQuotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalHistoricalQuotesOperationCompleted);
            }
            this.InvokeAsync("GetGlobalHistoricalQuotes", new object[] {
                        Identifiers,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        AsOfDate}, this.GetGlobalHistoricalQuotesOperationCompleted, userState);
        }
        
        private void OnGetGlobalHistoricalQuotesOperationCompleted(object arg) {
            if ((this.GetGlobalHistoricalQuotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalHistoricalQuotesCompleted(this, new GetGlobalHistoricalQuotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetGlobalHistoricalQuotesTrailing", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GlobalHistoricalQuotes GetGlobalHistoricalQuotesTrailing(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string EndDate, string PeriodType, string Periods) {
            object[] results = this.Invoke("GetGlobalHistoricalQuotesTrailing", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        EndDate,
                        PeriodType,
                        Periods});
            return ((GlobalHistoricalQuotes)(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalQuotesTrailingAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string EndDate, string PeriodType, string Periods) {
            this.GetGlobalHistoricalQuotesTrailingAsync(Identifier, IdentifierType, IdentifierAsOfDate, AdjustmentMethod, EndDate, PeriodType, Periods, null);
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalQuotesTrailingAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string EndDate, string PeriodType, string Periods, object userState) {
            if ((this.GetGlobalHistoricalQuotesTrailingOperationCompleted == null)) {
                this.GetGlobalHistoricalQuotesTrailingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalHistoricalQuotesTrailingOperationCompleted);
            }
            this.InvokeAsync("GetGlobalHistoricalQuotesTrailing", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        EndDate,
                        PeriodType,
                        Periods}, this.GetGlobalHistoricalQuotesTrailingOperationCompleted, userState);
        }
        
        private void OnGetGlobalHistoricalQuotesTrailingOperationCompleted(object arg) {
            if ((this.GetGlobalHistoricalQuotesTrailingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalHistoricalQuotesTrailingCompleted(this, new GetGlobalHistoricalQuotesTrailingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetGlobalHistoricalQuotesRange", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GlobalHistoricalQuotes GetGlobalHistoricalQuotesRange(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate) {
            object[] results = this.Invoke("GetGlobalHistoricalQuotesRange", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        StartDate,
                        EndDate});
            return ((GlobalHistoricalQuotes)(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalQuotesRangeAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate) {
            this.GetGlobalHistoricalQuotesRangeAsync(Identifier, IdentifierType, IdentifierAsOfDate, AdjustmentMethod, StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalQuotesRangeAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate, object userState) {
            if ((this.GetGlobalHistoricalQuotesRangeOperationCompleted == null)) {
                this.GetGlobalHistoricalQuotesRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalHistoricalQuotesRangeOperationCompleted);
            }
            this.InvokeAsync("GetGlobalHistoricalQuotesRange", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        StartDate,
                        EndDate}, this.GetGlobalHistoricalQuotesRangeOperationCompleted, userState);
        }
        
        private void OnGetGlobalHistoricalQuotesRangeOperationCompleted(object arg) {
            if ((this.GetGlobalHistoricalQuotesRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalHistoricalQuotesRangeCompleted(this, new GetGlobalHistoricalQuotesRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetGlobalHistoricalWeeklyQuotesRange", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GlobalHistoricalQuotes GetGlobalHistoricalWeeklyQuotesRange(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate) {
            object[] results = this.Invoke("GetGlobalHistoricalWeeklyQuotesRange", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        StartDate,
                        EndDate});
            return ((GlobalHistoricalQuotes)(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalWeeklyQuotesRangeAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate) {
            this.GetGlobalHistoricalWeeklyQuotesRangeAsync(Identifier, IdentifierType, IdentifierAsOfDate, AdjustmentMethod, StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalWeeklyQuotesRangeAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate, object userState) {
            if ((this.GetGlobalHistoricalWeeklyQuotesRangeOperationCompleted == null)) {
                this.GetGlobalHistoricalWeeklyQuotesRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalHistoricalWeeklyQuotesRangeOperationCompleted);
            }
            this.InvokeAsync("GetGlobalHistoricalWeeklyQuotesRange", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        StartDate,
                        EndDate}, this.GetGlobalHistoricalWeeklyQuotesRangeOperationCompleted, userState);
        }
        
        private void OnGetGlobalHistoricalWeeklyQuotesRangeOperationCompleted(object arg) {
            if ((this.GetGlobalHistoricalWeeklyQuotesRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalHistoricalWeeklyQuotesRangeCompleted(this, new GetGlobalHistoricalWeeklyQuotesRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetGlobalHistoricalMonthlyQuotesRange", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GlobalHistoricalQuotes GetGlobalHistoricalMonthlyQuotesRange(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate) {
            object[] results = this.Invoke("GetGlobalHistoricalMonthlyQuotesRange", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        StartDate,
                        EndDate});
            return ((GlobalHistoricalQuotes)(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalMonthlyQuotesRangeAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate) {
            this.GetGlobalHistoricalMonthlyQuotesRangeAsync(Identifier, IdentifierType, IdentifierAsOfDate, AdjustmentMethod, StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalMonthlyQuotesRangeAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate, object userState) {
            if ((this.GetGlobalHistoricalMonthlyQuotesRangeOperationCompleted == null)) {
                this.GetGlobalHistoricalMonthlyQuotesRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalHistoricalMonthlyQuotesRangeOperationCompleted);
            }
            this.InvokeAsync("GetGlobalHistoricalMonthlyQuotesRange", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        StartDate,
                        EndDate}, this.GetGlobalHistoricalMonthlyQuotesRangeOperationCompleted, userState);
        }
        
        private void OnGetGlobalHistoricalMonthlyQuotesRangeOperationCompleted(object arg) {
            if ((this.GetGlobalHistoricalMonthlyQuotesRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalHistoricalMonthlyQuotesRangeCompleted(this, new GetGlobalHistoricalMonthlyQuotesRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetGlobalHistoricalQuarterlyQuotesRange", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GlobalHistoricalQuotes GetGlobalHistoricalQuarterlyQuotesRange(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate) {
            object[] results = this.Invoke("GetGlobalHistoricalQuarterlyQuotesRange", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        StartDate,
                        EndDate});
            return ((GlobalHistoricalQuotes)(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalQuarterlyQuotesRangeAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate) {
            this.GetGlobalHistoricalQuarterlyQuotesRangeAsync(Identifier, IdentifierType, IdentifierAsOfDate, AdjustmentMethod, StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalQuarterlyQuotesRangeAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate, object userState) {
            if ((this.GetGlobalHistoricalQuarterlyQuotesRangeOperationCompleted == null)) {
                this.GetGlobalHistoricalQuarterlyQuotesRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalHistoricalQuarterlyQuotesRangeOperationCompleted);
            }
            this.InvokeAsync("GetGlobalHistoricalQuarterlyQuotesRange", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        StartDate,
                        EndDate}, this.GetGlobalHistoricalQuarterlyQuotesRangeOperationCompleted, userState);
        }
        
        private void OnGetGlobalHistoricalQuarterlyQuotesRangeOperationCompleted(object arg) {
            if ((this.GetGlobalHistoricalQuarterlyQuotesRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalHistoricalQuarterlyQuotesRangeCompleted(this, new GetGlobalHistoricalQuarterlyQuotesRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetGlobalHistoricalTrades", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GlobalHistoricalQuote[] GetGlobalHistoricalTrades(string Identifiers, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string AsOfDate) {
            object[] results = this.Invoke("GetGlobalHistoricalTrades", new object[] {
                        Identifiers,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        AsOfDate});
            return ((GlobalHistoricalQuote[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalTradesAsync(string Identifiers, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string AsOfDate) {
            this.GetGlobalHistoricalTradesAsync(Identifiers, IdentifierType, IdentifierAsOfDate, AdjustmentMethod, AsOfDate, null);
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalTradesAsync(string Identifiers, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string AsOfDate, object userState) {
            if ((this.GetGlobalHistoricalTradesOperationCompleted == null)) {
                this.GetGlobalHistoricalTradesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalHistoricalTradesOperationCompleted);
            }
            this.InvokeAsync("GetGlobalHistoricalTrades", new object[] {
                        Identifiers,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        AsOfDate}, this.GetGlobalHistoricalTradesOperationCompleted, userState);
        }
        
        private void OnGetGlobalHistoricalTradesOperationCompleted(object arg) {
            if ((this.GetGlobalHistoricalTradesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalHistoricalTradesCompleted(this, new GetGlobalHistoricalTradesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetGlobalHistoricalTradesRange", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GlobalHistoricalQuotes GetGlobalHistoricalTradesRange(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate) {
            object[] results = this.Invoke("GetGlobalHistoricalTradesRange", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        StartDate,
                        EndDate});
            return ((GlobalHistoricalQuotes)(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalTradesRangeAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate) {
            this.GetGlobalHistoricalTradesRangeAsync(Identifier, IdentifierType, IdentifierAsOfDate, AdjustmentMethod, StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalTradesRangeAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string AdjustmentMethod, string StartDate, string EndDate, object userState) {
            if ((this.GetGlobalHistoricalTradesRangeOperationCompleted == null)) {
                this.GetGlobalHistoricalTradesRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalHistoricalTradesRangeOperationCompleted);
            }
            this.InvokeAsync("GetGlobalHistoricalTradesRange", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        AdjustmentMethod,
                        StartDate,
                        EndDate}, this.GetGlobalHistoricalTradesRangeOperationCompleted, userState);
        }
        
        private void OnGetGlobalHistoricalTradesRangeOperationCompleted(object arg) {
            if ((this.GetGlobalHistoricalTradesRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalHistoricalTradesRangeCompleted(this, new GetGlobalHistoricalTradesRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetAdjustmentFactors", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AdjustmentFactors GetAdjustmentFactors(string Identifier, string IdentifierType, string StartDate, string EndDate) {
            object[] results = this.Invoke("GetAdjustmentFactors", new object[] {
                        Identifier,
                        IdentifierType,
                        StartDate,
                        EndDate});
            return ((AdjustmentFactors)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdjustmentFactorsAsync(string Identifier, string IdentifierType, string StartDate, string EndDate) {
            this.GetAdjustmentFactorsAsync(Identifier, IdentifierType, StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetAdjustmentFactorsAsync(string Identifier, string IdentifierType, string StartDate, string EndDate, object userState) {
            if ((this.GetAdjustmentFactorsOperationCompleted == null)) {
                this.GetAdjustmentFactorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdjustmentFactorsOperationCompleted);
            }
            this.InvokeAsync("GetAdjustmentFactors", new object[] {
                        Identifier,
                        IdentifierType,
                        StartDate,
                        EndDate}, this.GetAdjustmentFactorsOperationCompleted, userState);
        }
        
        private void OnGetAdjustmentFactorsOperationCompleted(object arg) {
            if ((this.GetAdjustmentFactorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdjustmentFactorsCompleted(this, new GetAdjustmentFactorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetGlobalHistoricalVWAP", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GlobalHistoricalVWAPs GetGlobalHistoricalVWAP(string Identifier, string IdentifierType, string IdentifierAsOfDate, string HistoricalVWAPType, string AdjustmentMethod, string StartTime, string EndTime) {
            object[] results = this.Invoke("GetGlobalHistoricalVWAP", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        HistoricalVWAPType,
                        AdjustmentMethod,
                        StartTime,
                        EndTime});
            return ((GlobalHistoricalVWAPs)(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalVWAPAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string HistoricalVWAPType, string AdjustmentMethod, string StartTime, string EndTime) {
            this.GetGlobalHistoricalVWAPAsync(Identifier, IdentifierType, IdentifierAsOfDate, HistoricalVWAPType, AdjustmentMethod, StartTime, EndTime, null);
        }
        
        /// <remarks/>
        public void GetGlobalHistoricalVWAPAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string HistoricalVWAPType, string AdjustmentMethod, string StartTime, string EndTime, object userState) {
            if ((this.GetGlobalHistoricalVWAPOperationCompleted == null)) {
                this.GetGlobalHistoricalVWAPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalHistoricalVWAPOperationCompleted);
            }
            this.InvokeAsync("GetGlobalHistoricalVWAP", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        HistoricalVWAPType,
                        AdjustmentMethod,
                        StartTime,
                        EndTime}, this.GetGlobalHistoricalVWAPOperationCompleted, userState);
        }
        
        private void OnGetGlobalHistoricalVWAPOperationCompleted(object arg) {
            if ((this.GetGlobalHistoricalVWAPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalHistoricalVWAPCompleted(this, new GetGlobalHistoricalVWAPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xignite.com/services/GetChartBars", RequestNamespace="http://www.xignite.com/services/", ResponseNamespace="http://www.xignite.com/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChartBarsSet GetChartBars(string Identifier, string IdentifierType, string IdentifierAsOfDate, string StartTime, string EndTime, string Precision, int Period, string AdjustmentMethod, bool IncludeExtended) {
            object[] results = this.Invoke("GetChartBars", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        StartTime,
                        EndTime,
                        Precision,
                        Period,
                        AdjustmentMethod,
                        IncludeExtended});
            return ((ChartBarsSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChartBarsAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string StartTime, string EndTime, string Precision, int Period, string AdjustmentMethod, bool IncludeExtended) {
            this.GetChartBarsAsync(Identifier, IdentifierType, IdentifierAsOfDate, StartTime, EndTime, Precision, Period, AdjustmentMethod, IncludeExtended, null);
        }
        
        /// <remarks/>
        public void GetChartBarsAsync(string Identifier, string IdentifierType, string IdentifierAsOfDate, string StartTime, string EndTime, string Precision, int Period, string AdjustmentMethod, bool IncludeExtended, object userState) {
            if ((this.GetChartBarsOperationCompleted == null)) {
                this.GetChartBarsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChartBarsOperationCompleted);
            }
            this.InvokeAsync("GetChartBars", new object[] {
                        Identifier,
                        IdentifierType,
                        IdentifierAsOfDate,
                        StartTime,
                        EndTime,
                        Precision,
                        Period,
                        AdjustmentMethod,
                        IncludeExtended}, this.GetChartBarsOperationCompleted, userState);
        }
        
        private void OnGetChartBarsOperationCompleted(object arg) {
            if ((this.GetChartBarsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChartBarsCompleted(this, new GetChartBarsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.xignite.com/services/", IsNullable=false)]
    public partial class Header : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private string tracerField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Tracer {
            get {
                return this.tracerField;
            }
            set {
                this.tracerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class ChartBar {
        
        private string startDateTimeField;
        
        private string endDateTimeField;
        
        private double uTCOffsetField;
        
        private double openField;
        
        private double highField;
        
        private double lowField;
        
        private double closeField;
        
        private double volumeField;
        
        private int tradesField;
        
        private double tWAPField;
        
        private double vWAPField;
        
        private string currencyField;
        
        private double cumulativeAdjustmentFactorField;
        
        /// <remarks/>
        public string StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string EndDateTime {
            get {
                return this.endDateTimeField;
            }
            set {
                this.endDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public double UTCOffset {
            get {
                return this.uTCOffsetField;
            }
            set {
                this.uTCOffsetField = value;
            }
        }
        
        /// <remarks/>
        public double Open {
            get {
                return this.openField;
            }
            set {
                this.openField = value;
            }
        }
        
        /// <remarks/>
        public double High {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
            }
        }
        
        /// <remarks/>
        public double Low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
            }
        }
        
        /// <remarks/>
        public double Close {
            get {
                return this.closeField;
            }
            set {
                this.closeField = value;
            }
        }
        
        /// <remarks/>
        public double Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        public int Trades {
            get {
                return this.tradesField;
            }
            set {
                this.tradesField = value;
            }
        }
        
        /// <remarks/>
        public double TWAP {
            get {
                return this.tWAPField;
            }
            set {
                this.tWAPField = value;
            }
        }
        
        /// <remarks/>
        public double VWAP {
            get {
                return this.vWAPField;
            }
            set {
                this.vWAPField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public double CumulativeAdjustmentFactor {
            get {
                return this.cumulativeAdjustmentFactorField;
            }
            set {
                this.cumulativeAdjustmentFactorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class HistoricalVWAP {
        
        private string startTimeField;
        
        private string endTimeField;
        
        private string vWAPTypeField;
        
        private double vWAPField;
        
        private double highField;
        
        private double lowField;
        
        private double volumeField;
        
        private double changeField;
        
        private double percentChangeField;
        
        private double tWAPField;
        
        private double amountField;
        
        private double tradesField;
        
        private string currencyField;
        
        private System.Nullable<double> cumulativeAdjustmentFactorField;
        
        /// <remarks/>
        public string StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public string EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public string VWAPType {
            get {
                return this.vWAPTypeField;
            }
            set {
                this.vWAPTypeField = value;
            }
        }
        
        /// <remarks/>
        public double VWAP {
            get {
                return this.vWAPField;
            }
            set {
                this.vWAPField = value;
            }
        }
        
        /// <remarks/>
        public double High {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
            }
        }
        
        /// <remarks/>
        public double Low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
            }
        }
        
        /// <remarks/>
        public double Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        public double Change {
            get {
                return this.changeField;
            }
            set {
                this.changeField = value;
            }
        }
        
        /// <remarks/>
        public double PercentChange {
            get {
                return this.percentChangeField;
            }
            set {
                this.percentChangeField = value;
            }
        }
        
        /// <remarks/>
        public double TWAP {
            get {
                return this.tWAPField;
            }
            set {
                this.tWAPField = value;
            }
        }
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public double Trades {
            get {
                return this.tradesField;
            }
            set {
                this.tradesField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> CumulativeAdjustmentFactor {
            get {
                return this.cumulativeAdjustmentFactorField;
            }
            set {
                this.cumulativeAdjustmentFactorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class AdjustmentFactor {
        
        private string eventField;
        
        private string exdateField;
        
        private string eventDescriptionField;
        
        private decimal factorField;
        
        private decimal cumulativeAdjustmentFactorField;
        
        /// <remarks/>
        public string Event {
            get {
                return this.eventField;
            }
            set {
                this.eventField = value;
            }
        }
        
        /// <remarks/>
        public string Exdate {
            get {
                return this.exdateField;
            }
            set {
                this.exdateField = value;
            }
        }
        
        /// <remarks/>
        public string EventDescription {
            get {
                return this.eventDescriptionField;
            }
            set {
                this.eventDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal Factor {
            get {
                return this.factorField;
            }
            set {
                this.factorField = value;
            }
        }
        
        /// <remarks/>
        public decimal CumulativeAdjustmentFactor {
            get {
                return this.cumulativeAdjustmentFactorField;
            }
            set {
                this.cumulativeAdjustmentFactorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class HistoricalQuote {
        
        private string dateField;
        
        private double closeField;
        
        private double openField;
        
        private double highField;
        
        private double lowField;
        
        private double vWAPField;
        
        private double tWAPField;
        
        private double volumeField;
        
        private double previousCloseField;
        
        private string previousCloseDateField;
        
        private double changeField;
        
        private double percentChangeField;
        
        private string adjustmentMethodUsedField;
        
        private System.Nullable<double> cumulativeAdjustmentFactorField;
        
        private string currencyField;
        
        private string priceNotationField;
        
        private string priceAmountField;
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public double Close {
            get {
                return this.closeField;
            }
            set {
                this.closeField = value;
            }
        }
        
        /// <remarks/>
        public double Open {
            get {
                return this.openField;
            }
            set {
                this.openField = value;
            }
        }
        
        /// <remarks/>
        public double High {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
            }
        }
        
        /// <remarks/>
        public double Low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
            }
        }
        
        /// <remarks/>
        public double VWAP {
            get {
                return this.vWAPField;
            }
            set {
                this.vWAPField = value;
            }
        }
        
        /// <remarks/>
        public double TWAP {
            get {
                return this.tWAPField;
            }
            set {
                this.tWAPField = value;
            }
        }
        
        /// <remarks/>
        public double Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        public double PreviousClose {
            get {
                return this.previousCloseField;
            }
            set {
                this.previousCloseField = value;
            }
        }
        
        /// <remarks/>
        public string PreviousCloseDate {
            get {
                return this.previousCloseDateField;
            }
            set {
                this.previousCloseDateField = value;
            }
        }
        
        /// <remarks/>
        public double Change {
            get {
                return this.changeField;
            }
            set {
                this.changeField = value;
            }
        }
        
        /// <remarks/>
        public double PercentChange {
            get {
                return this.percentChangeField;
            }
            set {
                this.percentChangeField = value;
            }
        }
        
        /// <remarks/>
        public string AdjustmentMethodUsed {
            get {
                return this.adjustmentMethodUsedField;
            }
            set {
                this.adjustmentMethodUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> CumulativeAdjustmentFactor {
            get {
                return this.cumulativeAdjustmentFactorField;
            }
            set {
                this.cumulativeAdjustmentFactorField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string PriceNotation {
            get {
                return this.priceNotationField;
            }
            set {
                this.priceNotationField = value;
            }
        }
        
        /// <remarks/>
        public string PriceAmount {
            get {
                return this.priceAmountField;
            }
            set {
                this.priceAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class ExchangeSplit {
        
        private Security securityField;
        
        private Split splitField;
        
        /// <remarks/>
        public Security Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
            }
        }
        
        /// <remarks/>
        public Split Split {
            get {
                return this.splitField;
            }
            set {
                this.splitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class Security {
        
        private string cIKField;
        
        private string cUSIPField;
        
        private string symbolField;
        
        private string iSINField;
        
        private string valorenField;
        
        private string sEDOLField;
        
        private string fIGIField;
        
        private string nameField;
        
        private string instrumentClassField;
        
        private string marketField;
        
        private string marketIdentificationCodeField;
        
        private string sectorField;
        
        private string industryField;
        
        /// <remarks/>
        public string CIK {
            get {
                return this.cIKField;
            }
            set {
                this.cIKField = value;
            }
        }
        
        /// <remarks/>
        public string CUSIP {
            get {
                return this.cUSIPField;
            }
            set {
                this.cUSIPField = value;
            }
        }
        
        /// <remarks/>
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        public string ISIN {
            get {
                return this.iSINField;
            }
            set {
                this.iSINField = value;
            }
        }
        
        /// <remarks/>
        public string Valoren {
            get {
                return this.valorenField;
            }
            set {
                this.valorenField = value;
            }
        }
        
        /// <remarks/>
        public string SEDOL {
            get {
                return this.sEDOLField;
            }
            set {
                this.sEDOLField = value;
            }
        }
        
        /// <remarks/>
        public string FIGI {
            get {
                return this.fIGIField;
            }
            set {
                this.fIGIField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string InstrumentClass {
            get {
                return this.instrumentClassField;
            }
            set {
                this.instrumentClassField = value;
            }
        }
        
        /// <remarks/>
        public string Market {
            get {
                return this.marketField;
            }
            set {
                this.marketField = value;
            }
        }
        
        /// <remarks/>
        public string MarketIdentificationCode {
            get {
                return this.marketIdentificationCodeField;
            }
            set {
                this.marketIdentificationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Sector {
            get {
                return this.sectorField;
            }
            set {
                this.sectorField = value;
            }
        }
        
        /// <remarks/>
        public string Industry {
            get {
                return this.industryField;
            }
            set {
                this.industryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class Split : Common {
        
        private string exDateField;
        
        private double numeratorField;
        
        private double denominatorField;
        
        private double splitRatioField;
        
        /// <remarks/>
        public string ExDate {
            get {
                return this.exDateField;
            }
            set {
                this.exDateField = value;
            }
        }
        
        /// <remarks/>
        public double Numerator {
            get {
                return this.numeratorField;
            }
            set {
                this.numeratorField = value;
            }
        }
        
        /// <remarks/>
        public double Denominator {
            get {
                return this.denominatorField;
            }
            set {
                this.denominatorField = value;
            }
        }
        
        /// <remarks/>
        public double SplitRatio {
            get {
                return this.splitRatioField;
            }
            set {
                this.splitRatioField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ChartBarsSet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GlobalHistoricalVWAPs))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdjustmentFactors))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GlobalHistoricalQuotes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GlobalHistoricalQuote))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExchangeSplitsList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Split))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SplitHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExchangeDividendsList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CashDividendHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SymbolsWithAdjustedFactorsList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SymbolChangeList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SymbolList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExchangeList))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class Common {
        
        private OutcomeTypes outcomeField;
        
        private string messageField;
        
        private string identityField;
        
        private double delayField;
        
        /// <remarks/>
        public OutcomeTypes Outcome {
            get {
                return this.outcomeField;
            }
            set {
                this.outcomeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string Identity {
            get {
                return this.identityField;
            }
            set {
                this.identityField = value;
            }
        }
        
        /// <remarks/>
        public double Delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum OutcomeTypes {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        SystemError,
        
        /// <remarks/>
        RequestError,
        
        /// <remarks/>
        RegistrationError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class ChartBarsSet : Common {
        
        private string identifierField;
        
        private string identifierTypeField;
        
        private Security securityField;
        
        private ChartBar[] chartBarsField;
        
        /// <remarks/>
        public string Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        public string IdentifierType {
            get {
                return this.identifierTypeField;
            }
            set {
                this.identifierTypeField = value;
            }
        }
        
        /// <remarks/>
        public Security Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
            }
        }
        
        /// <remarks/>
        public ChartBar[] ChartBars {
            get {
                return this.chartBarsField;
            }
            set {
                this.chartBarsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class GlobalHistoricalVWAPs : Common {
        
        private string identifierField;
        
        private string identifierTypeField;
        
        private string adjustmentMethodUsedField;
        
        private Security securityField;
        
        private HistoricalVWAP[] historicalVWAPsField;
        
        /// <remarks/>
        public string Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        public string IdentifierType {
            get {
                return this.identifierTypeField;
            }
            set {
                this.identifierTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AdjustmentMethodUsed {
            get {
                return this.adjustmentMethodUsedField;
            }
            set {
                this.adjustmentMethodUsedField = value;
            }
        }
        
        /// <remarks/>
        public Security Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
            }
        }
        
        /// <remarks/>
        public HistoricalVWAP[] HistoricalVWAPs {
            get {
                return this.historicalVWAPsField;
            }
            set {
                this.historicalVWAPsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class AdjustmentFactors : Common {
        
        private Security securityField;
        
        private AdjustmentFactor[] arrayOfAdjustmentFactorField;
        
        /// <remarks/>
        public Security Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
            }
        }
        
        /// <remarks/>
        public AdjustmentFactor[] ArrayOfAdjustmentFactor {
            get {
                return this.arrayOfAdjustmentFactorField;
            }
            set {
                this.arrayOfAdjustmentFactorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class GlobalHistoricalQuotes : Common {
        
        private string identifierField;
        
        private string identifierTypeField;
        
        private Security securityField;
        
        private string startDateField;
        
        private string endDateField;
        
        private HistoricalQuote[] historicalQuotesField;
        
        /// <remarks/>
        public string Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        public string IdentifierType {
            get {
                return this.identifierTypeField;
            }
            set {
                this.identifierTypeField = value;
            }
        }
        
        /// <remarks/>
        public Security Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
            }
        }
        
        /// <remarks/>
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public HistoricalQuote[] HistoricalQuotes {
            get {
                return this.historicalQuotesField;
            }
            set {
                this.historicalQuotesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class GlobalHistoricalQuote : Common {
        
        private string identifierField;
        
        private string identifierTypeField;
        
        private Security securityField;
        
        private HistoricalQuote historicalQuoteField;
        
        /// <remarks/>
        public string Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        public string IdentifierType {
            get {
                return this.identifierTypeField;
            }
            set {
                this.identifierTypeField = value;
            }
        }
        
        /// <remarks/>
        public Security Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
            }
        }
        
        /// <remarks/>
        public HistoricalQuote HistoricalQuote {
            get {
                return this.historicalQuoteField;
            }
            set {
                this.historicalQuoteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class ExchangeSplitsList : Common {
        
        private ExchangeSplit[] exchangeSplitsField;
        
        /// <remarks/>
        public ExchangeSplit[] ExchangeSplits {
            get {
                return this.exchangeSplitsField;
            }
            set {
                this.exchangeSplitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class SplitHistory : Common {
        
        private Security securityField;
        
        private string startDateField;
        
        private string endDateField;
        
        private double cumulativeSplitRatioField;
        
        private Split[] splitsField;
        
        /// <remarks/>
        public Security Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
            }
        }
        
        /// <remarks/>
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public double CumulativeSplitRatio {
            get {
                return this.cumulativeSplitRatioField;
            }
            set {
                this.cumulativeSplitRatioField = value;
            }
        }
        
        /// <remarks/>
        public Split[] Splits {
            get {
                return this.splitsField;
            }
            set {
                this.splitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class ExchangeDividendsList : Common {
        
        private string exchangeField;
        
        private string exDateField;
        
        private string corporateActionsAdjustedField;
        
        private ExchangeDividend[] exchangeDividendsField;
        
        /// <remarks/>
        public string Exchange {
            get {
                return this.exchangeField;
            }
            set {
                this.exchangeField = value;
            }
        }
        
        /// <remarks/>
        public string ExDate {
            get {
                return this.exDateField;
            }
            set {
                this.exDateField = value;
            }
        }
        
        /// <remarks/>
        public string CorporateActionsAdjusted {
            get {
                return this.corporateActionsAdjustedField;
            }
            set {
                this.corporateActionsAdjustedField = value;
            }
        }
        
        /// <remarks/>
        public ExchangeDividend[] ExchangeDividends {
            get {
                return this.exchangeDividendsField;
            }
            set {
                this.exchangeDividendsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class ExchangeDividend {
        
        private Security securityField;
        
        private CashDividend cashDividendField;
        
        /// <remarks/>
        public Security Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
            }
        }
        
        /// <remarks/>
        public CashDividend CashDividend {
            get {
                return this.cashDividendField;
            }
            set {
                this.cashDividendField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class CashDividend {
        
        private string typeField;
        
        private string paymentFrequencyField;
        
        private string declaredDateField;
        
        private string recordDateField;
        
        private string payDateField;
        
        private string exDateField;
        
        private double dividendAmountField;
        
        private string currencyField;
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentFrequency {
            get {
                return this.paymentFrequencyField;
            }
            set {
                this.paymentFrequencyField = value;
            }
        }
        
        /// <remarks/>
        public string DeclaredDate {
            get {
                return this.declaredDateField;
            }
            set {
                this.declaredDateField = value;
            }
        }
        
        /// <remarks/>
        public string RecordDate {
            get {
                return this.recordDateField;
            }
            set {
                this.recordDateField = value;
            }
        }
        
        /// <remarks/>
        public string PayDate {
            get {
                return this.payDateField;
            }
            set {
                this.payDateField = value;
            }
        }
        
        /// <remarks/>
        public string ExDate {
            get {
                return this.exDateField;
            }
            set {
                this.exDateField = value;
            }
        }
        
        /// <remarks/>
        public double DividendAmount {
            get {
                return this.dividendAmountField;
            }
            set {
                this.dividendAmountField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class CashDividendHistory : Common {
        
        private string corporateActionsAdjustedField;
        
        private string identifierField;
        
        private string identifierTypeField;
        
        private string identifierAsOfDateField;
        
        private Security securityField;
        
        private string startDateField;
        
        private string endDateField;
        
        private double cumulativeCashDividendField;
        
        private CashDividend[] cashDividendsField;
        
        /// <remarks/>
        public string CorporateActionsAdjusted {
            get {
                return this.corporateActionsAdjustedField;
            }
            set {
                this.corporateActionsAdjustedField = value;
            }
        }
        
        /// <remarks/>
        public string Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        public string IdentifierType {
            get {
                return this.identifierTypeField;
            }
            set {
                this.identifierTypeField = value;
            }
        }
        
        /// <remarks/>
        public string IdentifierAsOfDate {
            get {
                return this.identifierAsOfDateField;
            }
            set {
                this.identifierAsOfDateField = value;
            }
        }
        
        /// <remarks/>
        public Security Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
            }
        }
        
        /// <remarks/>
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public double CumulativeCashDividend {
            get {
                return this.cumulativeCashDividendField;
            }
            set {
                this.cumulativeCashDividendField = value;
            }
        }
        
        /// <remarks/>
        public CashDividend[] CashDividends {
            get {
                return this.cashDividendsField;
            }
            set {
                this.cashDividendsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class SymbolsWithAdjustedFactorsList : Common {
        
        private EventSymbol[] eventSymbolsField;
        
        /// <remarks/>
        public EventSymbol[] EventSymbols {
            get {
                return this.eventSymbolsField;
            }
            set {
                this.eventSymbolsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class EventSymbol {
        
        private string symbolField;
        
        private string nameField;
        
        private string exchangeField;
        
        private string exDateField;
        
        private string eventField;
        
        private string eventDescriptionField;
        
        /// <remarks/>
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Exchange {
            get {
                return this.exchangeField;
            }
            set {
                this.exchangeField = value;
            }
        }
        
        /// <remarks/>
        public string ExDate {
            get {
                return this.exDateField;
            }
            set {
                this.exDateField = value;
            }
        }
        
        /// <remarks/>
        public string Event {
            get {
                return this.eventField;
            }
            set {
                this.eventField = value;
            }
        }
        
        /// <remarks/>
        public string EventDescription {
            get {
                return this.eventDescriptionField;
            }
            set {
                this.eventDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class SymbolChangeList : Common {
        
        private string dateTimeField;
        
        private SymbolChange[] symbolChangesField;
        
        /// <remarks/>
        public string DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        public SymbolChange[] SymbolChanges {
            get {
                return this.symbolChangesField;
            }
            set {
                this.symbolChangesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class SymbolChange {
        
        private string symbolField;
        
        private string oldSymbolField;
        
        private string nameField;
        
        private string oldNameField;
        
        private string exchangeField;
        
        private string oldExchangeField;
        
        private string currencyField;
        
        private string oldCurrencyField;
        
        private string typeField;
        
        private string instrumentClassField;
        
        /// <remarks/>
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        public string OldSymbol {
            get {
                return this.oldSymbolField;
            }
            set {
                this.oldSymbolField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string OldName {
            get {
                return this.oldNameField;
            }
            set {
                this.oldNameField = value;
            }
        }
        
        /// <remarks/>
        public string Exchange {
            get {
                return this.exchangeField;
            }
            set {
                this.exchangeField = value;
            }
        }
        
        /// <remarks/>
        public string OldExchange {
            get {
                return this.oldExchangeField;
            }
            set {
                this.oldExchangeField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string OldCurrency {
            get {
                return this.oldCurrencyField;
            }
            set {
                this.oldCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string InstrumentClass {
            get {
                return this.instrumentClassField;
            }
            set {
                this.instrumentClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class SymbolList : Common {
        
        private ExchangeDescription exchangeField;
        
        private SecurityDescription[] securityDescriptionsField;
        
        /// <remarks/>
        public ExchangeDescription Exchange {
            get {
                return this.exchangeField;
            }
            set {
                this.exchangeField = value;
            }
        }
        
        /// <remarks/>
        public SecurityDescription[] SecurityDescriptions {
            get {
                return this.securityDescriptionsField;
            }
            set {
                this.securityDescriptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class ExchangeDescription {
        
        private string marketIdentificationCodeField;
        
        private string marketField;
        
        /// <remarks/>
        public string MarketIdentificationCode {
            get {
                return this.marketIdentificationCodeField;
            }
            set {
                this.marketIdentificationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Market {
            get {
                return this.marketField;
            }
            set {
                this.marketField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class SecurityDescription {
        
        private string symbolField;
        
        private string currencyField;
        
        private string nameField;
        
        private string instrumentClassField;
        
        /// <remarks/>
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string InstrumentClass {
            get {
                return this.instrumentClassField;
            }
            set {
                this.instrumentClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class ExchangeList : Common {
        
        private ExchangeDescription[] exchangeDescriptionsField;
        
        /// <remarks/>
        public ExchangeDescription[] ExchangeDescriptions {
            get {
                return this.exchangeDescriptionsField;
            }
            set {
                this.exchangeDescriptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListExchangesCompletedEventHandler(object sender, ListExchangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListExchangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListExchangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExchangeList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExchangeList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListSymbolsCompletedEventHandler(object sender, ListSymbolsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSymbolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSymbolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SymbolList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SymbolList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListSymbolChangesCompletedEventHandler(object sender, ListSymbolChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSymbolChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSymbolChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SymbolChangeList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SymbolChangeList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ListSymbolsWithAdjustedFactorsCompletedEventHandler(object sender, ListSymbolsWithAdjustedFactorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSymbolsWithAdjustedFactorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSymbolsWithAdjustedFactorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SymbolsWithAdjustedFactorsList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SymbolsWithAdjustedFactorsList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetCashDividendHistoryCompletedEventHandler(object sender, GetCashDividendHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashDividendHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashDividendHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CashDividendHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CashDividendHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetCashDividendsByExchangeCompletedEventHandler(object sender, GetCashDividendsByExchangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCashDividendsByExchangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCashDividendsByExchangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExchangeDividendsList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExchangeDividendsList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetSplitHistoryCompletedEventHandler(object sender, GetSplitHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSplitHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSplitHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SplitHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SplitHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetSplitsByExchangeCompletedEventHandler(object sender, GetSplitsByExchangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSplitsByExchangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSplitsByExchangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExchangeSplitsList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExchangeSplitsList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetGlobalHistoricalQuotesCompletedEventHandler(object sender, GetGlobalHistoricalQuotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalHistoricalQuotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalHistoricalQuotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GlobalHistoricalQuote[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GlobalHistoricalQuote[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetGlobalHistoricalQuotesTrailingCompletedEventHandler(object sender, GetGlobalHistoricalQuotesTrailingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalHistoricalQuotesTrailingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalHistoricalQuotesTrailingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GlobalHistoricalQuotes Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GlobalHistoricalQuotes)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetGlobalHistoricalQuotesRangeCompletedEventHandler(object sender, GetGlobalHistoricalQuotesRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalHistoricalQuotesRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalHistoricalQuotesRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GlobalHistoricalQuotes Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GlobalHistoricalQuotes)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetGlobalHistoricalWeeklyQuotesRangeCompletedEventHandler(object sender, GetGlobalHistoricalWeeklyQuotesRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalHistoricalWeeklyQuotesRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalHistoricalWeeklyQuotesRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GlobalHistoricalQuotes Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GlobalHistoricalQuotes)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetGlobalHistoricalMonthlyQuotesRangeCompletedEventHandler(object sender, GetGlobalHistoricalMonthlyQuotesRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalHistoricalMonthlyQuotesRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalHistoricalMonthlyQuotesRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GlobalHistoricalQuotes Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GlobalHistoricalQuotes)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetGlobalHistoricalQuarterlyQuotesRangeCompletedEventHandler(object sender, GetGlobalHistoricalQuarterlyQuotesRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalHistoricalQuarterlyQuotesRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalHistoricalQuarterlyQuotesRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GlobalHistoricalQuotes Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GlobalHistoricalQuotes)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetGlobalHistoricalTradesCompletedEventHandler(object sender, GetGlobalHistoricalTradesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalHistoricalTradesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalHistoricalTradesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GlobalHistoricalQuote[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GlobalHistoricalQuote[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetGlobalHistoricalTradesRangeCompletedEventHandler(object sender, GetGlobalHistoricalTradesRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalHistoricalTradesRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalHistoricalTradesRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GlobalHistoricalQuotes Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GlobalHistoricalQuotes)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAdjustmentFactorsCompletedEventHandler(object sender, GetAdjustmentFactorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdjustmentFactorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdjustmentFactorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdjustmentFactors Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdjustmentFactors)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetGlobalHistoricalVWAPCompletedEventHandler(object sender, GetGlobalHistoricalVWAPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalHistoricalVWAPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalHistoricalVWAPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GlobalHistoricalVWAPs Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GlobalHistoricalVWAPs)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetChartBarsCompletedEventHandler(object sender, GetChartBarsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChartBarsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChartBarsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChartBarsSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChartBarsSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591